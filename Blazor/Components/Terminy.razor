@inject HttpClient httpClient

@using KandaEu.Volejbal.Contracts.Terminy.Dto

<h2>Termíny</h2>

@if (State.IsLoading)
{
	<p><em>Načítám termíny...</em></p>
}

@if (State.LoadingFailed)
{
	<p><em>Načtení termínů se nezdařilo.</em></p>
}

@if (State.Terminy != null)
{
	<div>
		@foreach (var termin in State.Terminy)
        {
			<button type="button" class="btn btn-default">@termin.Datum.ToString("d. MMMM")</button>
        }

		@if (State.Terminy.Count == 0)
        {
			<span>Žádné termíny nejsou k dispozici.</span>
        }
	</div>
}

@functions
{
            protected TerminyState State { get; } = new TerminyState();

            protected override async Task OnInitializedAsync()
            {
                await base.OnInitializedAsync();

                State.IsLoading = true;

                TerminListDto terminList;
                try
                {

                    terminList = await httpClient.GetJsonAsync<TerminListDto>("http://localhost:9901/api/terminy");
            //        System.Threading.Thread.Sleep(1000);
                }
                catch
                {
                    State.LoadingFailed = true;
                    throw; // ???
                }
                finally
                {
                    State.IsLoading = false;
                }
                State.Terminy = terminList.Terminy;
                if (State.Terminy.Count > 0)
                {
                    await SetCurrentTerminAsync(State.Terminy[0].Id);
                }

            }

            async Task SetCurrentTerminAsync(int terminId)
            {
                //await eventAggregator.PublishAsync(new Blazor.Events.CurrentTerminChanged(terminId));
            }

        }
}