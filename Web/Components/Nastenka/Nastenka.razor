@using KandaEu.Volejbal.Contracts.Nastenka.Dto;
@using KandaEu.Volejbal.Web.WebApiClients;

@inject INastenkaWebApiClient NastenkaWebApiClient
@inject IOsobaWebApiClient OsobaWebApiClient

@page "/nastenka"

<h2>Vzkazy</h2>

@*// TODO: Loading*@

@if (State.Vzkazy != null)
{
	if (State.Vzkazy.Vzkazy.Count == 0)
	{
		<p>Na nástěnce není žádný aktuální vzkaz.</p>
	}
	else
	{
		foreach (var vzkaz in State.Vzkazy.Vzkazy)
		{
			<blockquote>
				<small>@vzkaz.Author dne @vzkaz.DatumVlozeni.DateTime.ToShortDateString() v @vzkaz.DatumVlozeni.DateTime.ToShortTimeString()</small>
				<p>@vzkaz.Zprava</p>
			</blockquote>
			<div>&nbsp;</div>
		}
	}
}

<h2 class="icon-plus-2">Přidat vzkaz</h2>

<EditForm Model="@formData" OnValidSubmit="OnValidSubmitAsync">
	<ValidationSummary />
	<DataAnnotationsValidator />

	<h3>Kdo</h3>
	<div class="input-control select">
		<InputSelect TValue="OsobaDto2" style="width:20em;">
			<option value="">---</option>
			@if (State.AktivniOsoby != null)
			{
				@foreach (var osoba in State.AktivniOsoby.Osoby)
				{
					<option selected="selected" value="@osoba.Id">@osoba.PrijmeniJmeno</option>
				}
			}
		</InputSelect>
	</div>

	<h3>Vzkaz</h3>
	<div class="input-control textarea">
		<span></span>
		<InputTextArea @bind-Value="@formData.Zprava" rows="5" cols="20" style="width:30em;" />
	</div>

	<input type="submit" value="přidat vzkaz" class="bg-color-red fg-color-white" />

</EditForm>

@code
{
	private NastenkaFormData formData = new NastenkaFormData();
	private LoadingState LoadingState = new LoadingState();
	private NastenkaState State = new NastenkaState();

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		await LoadDataAsync();
	}

	private async Task OnValidSubmitAsync()
	{
		// TODO: Sdílení Contracts!
		await NastenkaWebApiClient.VlozVzkazAsync(new WebApiClients.VzkazInputDto { AutorId = formData.AutorId.Value, Zprava = formData.Zprava });
		await LoadDataAsync();
	}

	private async Task LoadDataAsync()
	{
		try
		{
			// TODO
		}
		catch
		{

		}
		State.AktivniOsoby = await OsobaWebApiClient.GetAktivniOsobyAsync();
		State.Vzkazy = await NastenkaWebApiClient.GetVzkazyAsync();
	}
}